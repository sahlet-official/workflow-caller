name: Release

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.2.3)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      WORK_FOLDER: work-folder-12345
      REPO_FOLDER: repo

    steps:
      - name: Creating work folder
        id: create_wd
        run: mkdir "$WORK_FOLDER"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}

      # - name: Check Docker version
      #   run: |
      #     docker version
      #     docker buildx version

      - name: Build Docker image
        # run: docker build -t workflow-caller -f Dockerfile .
        # run: DOCKER_BUILDKIT=1 docker buildx build --no-cache --platform linux/arm64 -t workflow-caller:arm64 -f Dockerfile .
        # run: DOCKER_BUILDKIT=1 docker build --compress --no-cache --tag workflow-caller -f Dockerfile .
        # run: docker build --compress --no-cache --tag workflow-caller -f Dockerfile .
        run: |
            docker buildx create --name rawbuilder --driver docker-container --use &&
            docker buildx build --output type=oci,dest=image-dir --provenance=false --tag workflow-caller -f Dockerfile .
        working-directory: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}

      # - name: Save Docker image to .tar
      #   run: docker save workflow-caller -o workflow-caller.tar
      #   working-directory: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}

      # - name: Compress Docker image
      #   run: gzip workflow-caller.tar
      #   working-directory: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}

      - name: Set git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
        working-directory: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}

      - name: Create Git tags
        run: |
          git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}

          git tag -f v0 -m "Release v${{ github.event.inputs.version }}"
          git push --force origin v0

          git fetch origin --tags
          git tag -f latest -m "Release v${{ github.event.inputs.version }}"
          git push --force origin latest
        working-directory: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v2
      #   with:
      #     tag_name: v${{ github.event.inputs.version }}
      #     name: Release v${{ github.event.inputs.version }}
      #     generate_release_notes: true
      #     files: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}/workflow-caller.tar.gz

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          generate_release_notes: true
          files: ${{ env.WORK_FOLDER }}/${{ env.REPO_FOLDER }}/image-dir

      - name: Cleanup
        if: always() && steps.create_wd.outcome == 'success'
        run: rm -r "$WORK_FOLDER"