name: Release

permissions:
  contents: write
  packages: write

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g. 1.2.3)'
        required: true

jobs:
  release:
    runs-on: ubuntu-latest

    env:
      WORK_FOLDER: work-folder-very-unique-name

    steps:
      - name: Creating work folder
        id: create_wd
        run: mkdir "$WORK_FOLDER"

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: ${{ env.WORK_FOLDER }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.WORK_FOLDER }}/action

      - name: Build with ncc
        run: npm run prepare
        working-directory: ${{ env.WORK_FOLDER }}/action

      - name: Set git user
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
        working-directory: ${{ env.WORK_FOLDER }}

      - name: Commit dist
        run: |
          git add dist
          git commit -m "chore: build for release v${{ github.event.inputs.version }}" || echo "No changes to commit"
        working-directory: ${{ env.WORK_FOLDER }}/action

      - name: Sync and Push Commit
        run: |
          git fetch origin
          git pull --rebase
          git push origin HEAD
        working-directory: ${{ env.WORK_FOLDER }}

      - name: Set Docker Login info
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        env:
          REPO_OWNER: ${{ github.repository_owner }}
        run: |
          docker buildx create --name mybuilder --driver docker-container --use &&
          BUILDKIT_COMPRESSION=gzip \
          docker buildx build --output=type=image,push=true \
            --provenance=false \
            --tag "ghcr.io/${REPO_OWNER}/workflow-caller:arm64_v${{ github.event.inputs.version }}" \
            --platform=linux/arm64 \
            -f Dockerfile .
          # BUILDKIT_COMPRESSION=gzip \
          # docker buildx build --output=type=registry \
          #   --provenance=false \
          #   --tag "ghcr.io/${REPO_OWNER}/workflow-caller:arm64_v${{ github.event.inputs.version }}" \
          #   --platform=linux/arm64 \
          #   -f Dockerfile .
        working-directory: ${{ env.WORK_FOLDER }}

      - name: Create Git tags
        run: |
          git tag -a v${{ github.event.inputs.version }} -m "Release v${{ github.event.inputs.version }}"
          git push origin v${{ github.event.inputs.version }}

          git tag -f v0 -m "Release v${{ github.event.inputs.version }}"
          git push --force origin v0

          git fetch origin --tags
          git tag -f latest -m "Release v${{ github.event.inputs.version }}"
          git push --force origin latest
        working-directory: ${{ env.WORK_FOLDER }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          generate_release_notes: true

      - name: Cleanup
        if: always() && steps.create_wd.outcome == 'success'
        run: rm -r "$WORK_FOLDER"